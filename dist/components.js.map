{"mappings":"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","sources":["components.js","assets/components/button.js","assets/settings.js","assets/base/component.js","assets/components/dot.js","assets/components/index-1.js","assets/components/navlink.js"],"sourcesContent":["/* Enables access to all components via a single statement: import * as components from 'path'; */\r\nexport * from './assets/components/button.js';\r\nexport * from './assets/components/dot.js';\r\nexport * from './assets/components/index-1.js';\r\nexport * from './assets/components/navlink.js';\r\n\r\n//export * from './assets/_components/jap-nav-link-h1-drop.js';\r\n//export * from './assets/_components/jap-plot.js';\r\n//export * from './assets/_components/jap-input-text.js';\r\n\r\n","import { settings } from '../settings.js';\r\nimport { Component } from '../base/component.js';\r\n\r\n/* Component for button with ripple effect */\r\nclass Button extends Component {\r\n  constructor({text}) {\r\n    super();\r\n    this.html = `\r\n    <style>\r\n      input[type=\"button\"],\r\n      input[type=\"submit\"],\r\n      input[type=\"reset\"],\r\n      button {\r\n        overflow: hidden;\r\n        background-color: var(--themeColor);\r\n        color: var(--white);\r\n        font-family: var(--fontFamily);\r\n        font-size: 16px;\r\n        text-transform: uppercase;\r\n        padding: 12px 18px;\r\n        border: none;\r\n        border-radius: 2px;\r\n        box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n        outline: none;\r\n      }\r\n\r\n      input[type=\"button\"]:hover,\r\n      input[type=\"submit\"]:hover,\r\n      input[type=\"reset\"]:hover,\r\n      button:hover {\r\n        background-color: var(--themeColorAccent);\r\n      }\r\n\r\n      button {\r\n        /* Enable position absolute for span ripple element: */\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: background 400ms;\r\n      }\r\n\r\n      span.ripple {\r\n        position: absolute;\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n        /* Make ripples circular: */\r\n        border-radius: 50%;\r\n        /* Ensure that each ripple emerges from nothing: */\r\n        transform: scale(0);\r\n        animation: rippleEffect 600ms linear;\r\n        /* top, left, width, and height are set from code. */\r\n      }\r\n\r\n      @keyframes rippleEffect {\r\n        from {\r\n          transform: scale(0);\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          transform: scale(4);\r\n          opacity: 0;\r\n        }\r\n      }\r\n    </style>\r\n    <button></button>\r\n    `;\r\n    // HTML elements:\r\n    this._buttonElement = this._root.querySelector('button');\r\n    // Events:\r\n    this._buttonElement.addEventListener('click', this._createRipple.bind(this));\r\n    // Args:\r\n    this.text = text;\r\n  }\r\n\r\n  get text() {\r\n    return this._buttonElement.textContent;\r\n  }\r\n\r\n  set text(text) {\r\n    this._buttonElement.textContent = text;\r\n  }\r\n\r\n  _createRipple(event) {\r\n    const oldRippleElement = this._root.querySelector('span.ripple');\r\n    if (oldRippleElement) {\r\n      oldRippleElement.remove();\r\n    }\r\n    const rippleElement = document.createElement('span');\r\n    rippleElement.classList.add(\"ripple\")\r\n    // Set rippleElement size (ripple diameter):\r\n    const size = Math.max(this._buttonElement.clientWidth, this._buttonElement.clientHeight);\r\n    rippleElement.style.width = rippleElement.style.height = `${size}px`;\r\n    // Position rippleElement:\r\n    rippleElement.style.left = `${event.clientX - this._buttonElement.offsetLeft - size/2}px`;\r\n    rippleElement.style.top = `${event.clientY - this._buttonElement.offsetTop - size/2}px`;\r\n    this._buttonElement.appendChild(rippleElement)\r\n  }\r\n\r\n}\r\n\r\nconst componentTag = `${settings.prefix}-button`;\r\ncustomElements.get(componentTag) || customElements.define(componentTag, Button);\r\n\r\nexport { Button };\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const settings = {\r\n  prefix: 'x',\r\n}\r\n\r\nexport { settings };\r\n\r\n","class Component extends HTMLElement {\r\n  constructor() {\r\n    super()\r\n    this._root = this.attachShadow({ mode: 'open' })\r\n  }\r\n\r\n  /* Returns html. */\r\n  get html() {\r\n    return this._root.innerHTML\r\n  }\r\n\r\n  /* Sets html. */\r\n  set html(html) {\r\n    while (this._root.firstChild) {\r\n      this._root.firstChild.remove()\r\n    }\r\n    this._root.innerHTML = html || ''  // To avoid showing 'undefined'.\r\n  }\r\n\r\n  /* Adds a component to slot in this component. */\r\n  addComponent(component, slot = '') {\r\n    if (!this._root.querySelector(`slot[name=\"${slot}\"]`)) {\r\n      throw new Error(`Slot '${slot}' could not be found.`)\r\n    }\r\n    component.slot = slot\r\n    this.appendChild(component)  \r\n  }\r\n\r\n  removeComponent(component) {\r\n    if (!this.querySelectorAll('*').includes(component)) {\r\n      throw new Error(`Attempted to remove non-added component.`);\r\n    }\r\n    component.removeAttribute('slot')\r\n    component.remove()\r\n  }\r\n\r\n  /* Removes component added to slot. */\r\n  clear(slot) {\r\n    this.getComponents(slot).forEach(component => this.removeComponent(component))\r\n  }\r\n\r\n  /* Returns components added to slot. */\r\n  getComponents(slot) {\r\n    const slotElement = this._root.querySelector(`slot[name=\"${slot}\"]`)\r\n    if (!slotElement) {\r\n      throw new Error(`Slot '${slot}' could not be found.`)\r\n    }\r\n    return slotElement.assignedElements()\r\n  }\r\n\r\n  /* Returns array of slot names. Unnamed slot's name is ''.*/\r\n  getSlots() {\r\n    return [...this._root.querySelectorAll(`slot`)].map(element => element.name)\r\n  }\r\n\r\n  /* Hides component */\r\n  hide() {\r\n    this.style.display = 'none'\r\n  }\r\n\r\n  /* Shows component */\r\n  show() {\r\n    this.style.display = 'initial'\r\n  }\r\n}\r\n\r\nexport { Component };\r\n","import { settings } from '../settings.js';\r\nimport { Component } from '../base/component.js';\r\n\r\n/* Component for simple filled circle. */\r\nclass Dot extends Component {\r\n  #size;\r\n  constructor() {\r\n    super()\r\n    //<link rel=\"stylesheet\" href=\"assets/components/dot.css\">\r\n    this.html = `\r\n    <style>\r\n      span {\r\n        display: inline-block;\r\n        width: 48px;\r\n        height: 48px;\r\n        border-radius: 50%;\r\n        background-color: var(--themeColor, red);\r\n      }\r\n    </style>\r\n    <span></span>\r\n    `\r\n    this._dotElement = this._root.querySelector('span')\r\n  }\r\n\r\n  /* Returns dot color. */\r\n  get color() {\r\n    return this._dotElement.style.backgroundColor\r\n  }\r\n\r\n  /* Sets dot color. */\r\n  set color(color) {\r\n    this._dotElement.style.backgroundColor = color\r\n  }\r\n\r\n  /* Returns dot size. */\r\n  get size() {\r\n    return this.#size\r\n  }\r\n\r\n  /* Sets dot size. */\r\n  set size(size) {\r\n    this.#size = size;\r\n    this._dotElement.style.width = size\r\n    this._dotElement.style.height = size\r\n  }\r\n\r\n}\r\n\r\nconst componentTag = `${settings.prefix}-dot`\r\ncustomElements.get(componentTag) || customElements.define(componentTag, Dot)\r\n\r\nexport { Dot };\r\n","import { settings } from '../settings.js'\r\nimport { Component } from '../base/component.js';\r\n\r\n/* Implements index component with left slide panel. */\r\nclass Index1 extends Component {\r\n  constructor() {\r\n    super({});\r\n    this.html = `\r\n    <style>    \r\n    :host {\r\n      --headerHeight: 70px;\r\n      --sideWidth: 300px;\r\n      --sideTransitionTime: 400ms;\r\n    }\r\n\r\n    .page {\r\n      display: flex;\r\n      flex-direction: column;\r\n      min-height: 100vh;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    header {\r\n      position: sticky;\r\n      top: 0;\r\n      height: var(--headerHeight);\r\n      display: flex;\r\n      align-items: center;\r\n      color: var(--baseColor, white);\r\n      background-color: var(--themeColor, red);\r\n      padding: 0 32px;\r\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n    }\r\n    \r\n    .menu {\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      font-size: 32px;\r\n      background-color: transparent;\r\n      padding: 0 8px;\r\n      border: none;\r\n      transition: background-color 400ms;\r\n    }\r\n    \r\n    .menu:hover {\r\n      background-color: var(--themeColorAccent, pink);\r\n    }\r\n\r\n    .menu > svg {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n\r\n    .menu > svg > path {\r\n      fill: var(--baseColor, white);\r\n      stroke: transparent;\r\n    }\r\n\r\n    a.home {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 100%;\r\n      text-decoration: none;\r\n      padding: 0 8px;\r\n      transition: background-color 400ms;\r\n    }\r\n    \r\n    .logo {\r\n      height: 60%;\r\n      margin: 0 4px 0 0;\r\n    }\r\n    \r\n    .title {\r\n      font-family: var(--fontFamily);\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n      padding: 0;\r\n      margin: 0 0 0 4px;\r\n    }\r\n    \r\n    slot[name=\"top\"] {\r\n      height: 100%;\r\n      margin-left: auto;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n    \r\n    main {\r\n      flex-grow: 1;\r\n      padding: 48px 32px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      row-gap: 16px;\r\n    }\r\n    \r\n    footer {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .side {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      width: var(--sideWidth);\r\n      z-index: 10;\r\n      display: flex;\r\n      flex-direction: column;\r\n      row-gap: 16px;\r\n      background-color: white;\r\n      box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n      transition: transform var(--sideTransitionTime) ease-out;\r\n    }\r\n    \r\n    .side.closed {\r\n      transform: translateX(-100%);\r\n    }\r\n    \r\n    button.close {\r\n      align-self: flex-end;\r\n      background-color: transparent;\r\n      padding: 8px;\r\n      border: none;\r\n      margin-top: 8px;\r\n    }\r\n\r\n    button.close > svg {\r\n      width: 24px;\r\n      height: 24px;\r\n    }\r\n\r\n    button.close > svg > path {\r\n      fill: darkGray;\r\n      stroke: transparent;\r\n      transition: fill 400ms;\r\n    }\r\n\r\n    button.close:hover > svg > path {\r\n      fill: dimGray;\r\n    }\r\n    \r\n    slot[name=\"side\"] {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n      .side {\r\n        top: var(--headerHeight);\r\n      }\r\n    \r\n      main {\r\n        margin-left: var(--sideWidth);\r\n        transition: margin-left var(--sideTransitionTime) ease-out;\r\n      }\r\n    \r\n      .side.closed~main {\r\n        margin-left: 0;\r\n      }\r\n    }\r\n    </style>\r\n    <div class=\"page\">\r\n      <header>\r\n        <a class=\"menu toggle\">\r\n          <svg viewBox=\"0 0 24 24\">\r\n            <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n          </svg>\r\n        </a>\r\n        <a href=\"#\" class=\"home\">\r\n          <img src=\"\" alt=\"\" class=\"logo\">\r\n          <h2 class=\"title\">Title</h2>\r\n        </a>\r\n        <slot name=\"top\" class=\"top close\"></slot>\r\n      </header>\r\n      <div class=\"side\">\r\n        <button class=\"close\">\r\n          <svg viewBox=\"0 0 24 24\">\r\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\r\n          </svg>\r\n        </button>        \r\n        <slot name=\"side\" class=\"close\"></slot>\r\n      </div>\r\n      <main class=\"close\">\r\n        <slot name=\"main\"></slot>\r\n      </main>\r\n      <footer>\r\n        <slot name=\"footer\"></slot>\r\n      </footer>\r\n    <div>\r\n    `;\r\n    // HTML elements:\r\n    this._logoElement = this._root.querySelector('.logo');\r\n    this._titleElement = this._root.querySelector('.title');\r\n\r\n    this._sideElement = this._root.querySelector('.side');\r\n\r\n    this._sideCloseElements = this._root.querySelectorAll('.close');\r\n    this._sideToggleElements = this._root.querySelectorAll('.toggle');\r\n\r\n    // Events:\r\n    this._sideCloseElements.forEach(element => {\r\n      element.addEventListener('click', event => {\r\n        this.closePanel();\r\n      });\r\n    });\r\n\r\n    this._sideToggleElements.forEach(element => {\r\n      element.addEventListener('click', event => {\r\n        this.togglePanel();\r\n      });\r\n    });\r\n  }\r\n\r\n  get logo() {\r\n    return this._logoElement.src;\r\n  }\r\n\r\n  set logo(url) {\r\n    this._logoElement.src = url;\r\n  }\r\n\r\n  get title() {\r\n    return this._titleElement.textContent;\r\n  }\r\n\r\n  set title(text) {\r\n    this._titleElement.textContent = text;\r\n  }\r\n\r\n  closePanel() {\r\n    this._sideElement.classList.add('closed');\r\n  }\r\n\r\n  openPanel() {\r\n    this._sideElement.classList.remove('closed');\r\n  }\r\n\r\n  togglePanel() {\r\n    if (this._sideElement.classList.contains('closed')) {\r\n      this.openPanel();\r\n    }\r\n    else {\r\n      this.closePanel();\r\n    }\r\n  }\r\n\r\n  // TODO: Somehow activate from the component's 'focus component state'.\r\n  linkFocusHandler(event) {\r\n    const selected = 42;\r\n    const siblings = this.querySelectorAll(`a[slot=${component.slot}]`);\r\n    siblings.forEach(component => component.deselect());\r\n    selected.select()\r\n  }\r\n\r\n}\r\n\r\nconst componentTag = `${settings.prefix}-index-1`;\r\ncustomElements.get(componentTag) || customElements.define(componentTag, Index1);\r\n\r\n\r\nexport { Index1 };\r\n","import { settings } from '../settings.js'\r\nimport { Component } from '../base/component.js';\r\n\r\n/* \r\nTODO:\r\n- Deal with icons.\r\n*/\r\n\r\n/* Component navigation links. */\r\nclass Navlink extends Component {\r\n  constructor({ href, text }) {\r\n    super();\r\n    this.html = `\r\n    <style>\r\n    :host([horizontal]) a {\r\n        font-family: var(--fontFamily);\r\n        font-size: 16px;\r\n        text-decoration: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        white-space: nowrap;\r\n        color: white;\r\n        padding: 0 8px;          \r\n        transition: background-color 200ms;\r\n      }\r\n      \r\n      :host([horizontal]) a:hover {\r\n        background-color: var(--themeColorAccent);\r\n      }\r\n      \r\n      :host([horizontal]) hr {\r\n        height: 0;\r\n        background-color: white;\r\n        border: 2px solid white;\r\n        margin-top: -2px;\r\n        transform: scaleX(0);\r\n      }\r\n\r\n      :host([horizontal]) a:active ~ hr {\r\n        transition: transform 200ms ease-out;\r\n        transform: scaleX(1);\r\n      }\r\n\r\n      :host([horizontal]) a.selected ~ hr,\r\n      :host([horizontal]) a:focus ~ hr {\r\n        transform: scaleX(1);\r\n      }\r\n\r\n      :host([vertical]) a {\r\n        display: block;\r\n        color: black;\r\n        font-family: var(--fontFamily);\r\n        font-size: 16px;\r\n        text-decoration: none;\r\n        padding: 8px 16px;\r\n        transition: background-color 200ms, color 200ms;\r\n      }\r\n\r\n      :host([vertical]) a:hover,\r\n      :host([vertical]) a:focus, \r\n      :host([vertical]) a.selected {\r\n        background-color: lightGray !important;\r\n        color: var(--themeColor);\r\n      }\r\n\r\n      :host([vertical])  hr {\r\n        display: none;\r\n      }\r\n    </style>\r\n    <a href=\"#\" class=\"text\"></a>\r\n    <hr>\r\n    `;\r\n    this._aElement = this._root.querySelector('a');\r\n    this._textElement = this._root.querySelector('.text');\r\n    this.text = text || '';\r\n    if (href) {\r\n      this._aElement.href = href;\r\n    }\r\n  }\r\n\r\n  get text() {\r\n    return this._aElement.textContent;\r\n  }\r\n\r\n  set text(text) {\r\n    this._aElement.textContent = text;\r\n  }\r\n\r\n  /* Styles nav link as selected. */\r\n  select() {\r\n    this._aElement.classList.add('selected')\r\n  }\r\n\r\n  /* Styles nav link as unselected. */\r\n  deselect() {\r\n    this._aElement.classList.remove('selected')\r\n  }\r\n}\r\n\r\nconst componentTag = `${settings.prefix}-navlink`;\r\ncustomElements.get(componentTag) || customElements.define(componentTag, Navlink);\r\n\r\nexport { Navlink };\r\n"],"names":[],"version":3,"file":"components.js.map"}